// Teste manual das corre√ß√µes
console.log('üß™ INICIANDO TESTES MANUAIS...');

// Aguardar 2 segundos para garantir que tudo carregou
setTimeout(function() {
    console.log('\n=== TESTE 1: Valida√ß√£o de Lote ===');
    // Simular clique em nextStep na etapa 5
    if (window.setCurrentStep) {
        window.setCurrentStep(5);
        console.log('- Mudando para etapa 5');
        
        // Verificar se h√° lotes
        const lotes = document.querySelectorAll('.lote-card');
        console.log('- Lotes encontrados:', lotes.length);
        
        // Tentar avan√ßar
        console.log('- Tentando avan√ßar sem lote...');
        if (window.nextStep) {
            window.nextStep();
        }
    }
    
    console.log('\n=== TESTE 2: Prote√ß√£o de Lote ===');
    // Verificar se fun√ß√£o existe
    if (window.loteTemIngressos) {
        console.log('- Fun√ß√£o loteTemIngressos existe: ‚úÖ');
        
        // Testar com um lote fict√≠cio
        const resultado = window.loteTemIngressos('teste123');
        console.log('- Teste com lote fict√≠cio:', resultado);
    } else {
        console.log('- Fun√ß√£o loteTemIngressos existe: ‚ùå');
    }
    
    console.log('\n=== TESTE 3: Datas na Edi√ß√£o ===');
    if (window.applyLoteDatesToTicket) {
        console.log('- Fun√ß√£o applyLoteDatesToTicket existe: ‚úÖ');
    } else {
        console.log('- Fun√ß√£o applyLoteDatesToTicket existe: ‚ùå');
    }
    
    console.log('\n=== TESTE 4: √çcone de Lixeira ===');
    if (window.renderEditComboItems) {
        console.log('- Fun√ß√£o renderEditComboItems existe: ‚úÖ');
        
        // Verificar conte√∫do da fun√ß√£o
        const funcStr = window.renderEditComboItems.toString();
        const temSVG = funcStr.includes('<svg');
        const temEmoji = funcStr.includes('üóëÔ∏è');
        
        console.log('- Fun√ß√£o cont√©m SVG:', temSVG ? '‚úÖ' : '‚ùå');
        console.log('- Fun√ß√£o cont√©m emoji:', temEmoji ? '‚ùå (correto)' : '‚úÖ (errado)');
        
        // Criar item de teste
        window.editComboItems = [{
            ticket_name: 'Ingresso Teste',
            quantidade: 2
        }];
        
        // Criar container tempor√°rio
        const tempDiv = document.createElement('div');
        tempDiv.id = 'editComboItemsList';
        tempDiv.style.display = 'none';
        document.body.appendChild(tempDiv);
        
        // Renderizar
        window.renderEditComboItems();
        
        // Verificar resultado
        const html = tempDiv.innerHTML;
        console.log('- HTML cont√©m SVG:', html.includes('<svg') ? '‚úÖ' : '‚ùå');
        console.log('- HTML cont√©m emoji:', html.includes('üóëÔ∏è') ? '‚ùå (errado)' : '‚úÖ (correto)');
        
        // Limpar
        document.body.removeChild(tempDiv);
        window.editComboItems = [];
    } else {
        console.log('- Fun√ß√£o renderEditComboItems existe: ‚ùå');
    }
    
    console.log('\n=== RESUMO DOS TESTES ===');
    console.log('Se todos os testes mostraram ‚úÖ, as corre√ß√µes est√£o aplicadas.');
    console.log('Se algum mostrou ‚ùå, recarregue a p√°gina com Ctrl+F5.');
    
}, 2000);
