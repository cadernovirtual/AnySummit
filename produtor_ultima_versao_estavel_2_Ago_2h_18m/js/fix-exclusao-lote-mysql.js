// Corre√ß√£o para exclus√£o de lotes por data no MySQL
(function() {
    console.log('üîß Aplicando corre√ß√£o para exclus√£o de lotes por data...');
    
    // Sobrescrever a fun√ß√£o excluirLoteData
    window.excluirLoteData = function(id) {
        console.log('üóëÔ∏è [MYSQL] excluirLoteData chamada com ID:', id);
        console.trace('üìç Stack trace de excluirLoteData:');
        
        // Verificar se h√° ingressos associados a este lote
        const lote = window.lotesData?.porData?.find(l => l.id === id);
        if (lote && typeof window.verificarIngressosNoLote === 'function' && window.verificarIngressosNoLote(lote.id)) {
            console.log('‚ö†Ô∏è Lote tem ingressos associados - cancelando exclus√£o');
            alert('N√£o √© poss√≠vel excluir este lote pois existem ingressos associados a ele. Exclua os ingressos primeiro.');
            return;
        }
        
        if (confirm('Tem certeza que deseja excluir este lote?')) {
            console.log('‚úÖ Usu√°rio confirmou exclus√£o - prosseguindo...');
            
            // CORRE√á√ÉO: Excluir do MySQL tamb√©m
            const eventoId = new URLSearchParams(window.location.search).get('evento_id');
            console.log('üì° Enviando requisi√ß√£o para excluir lote:', { eventoId, loteId: id });
            
            fetch('/produtor/ajax/wizard_evento.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `action=excluir_lote&evento_id=${eventoId}&lote_id=${id}`
            })
            .then(response => {
                console.log('üì° Resposta recebida:', response.status, response.statusText);
                return response.json();
            })
            .then(data => {
                console.log('üì¶ Dados da resposta:', data);
                
                if (data.sucesso) {
                    console.log('‚úÖ Lote exclu√≠do do MySQL com sucesso');
                    
                    // Remover do array local se existir
                    if (window.lotesData?.porData) {
                        const tamanhoAntes = window.lotesData.porData.length;
                        window.lotesData.porData = window.lotesData.porData.filter(l => l.id != id);
                        const tamanhoDepois = window.lotesData.porData.length;
                        console.log(`üìä Array local atualizado: ${tamanhoAntes} ‚Üí ${tamanhoDepois} lotes`);
                        
                        // Renomear se fun√ß√£o existir
                        if (typeof window.renomearLotesAutomaticamente === 'function') {
                            console.log('üîÑ Renomeando lotes...');
                            window.renomearLotesAutomaticamente();
                        }
                        
                        // Salvar no cookie se fun√ß√£o existir
                        if (typeof window.salvarLotesNoCookie === 'function') {
                            console.log('üíæ Salvando no cookie...');
                            window.salvarLotesNoCookie();
                        }
                    }
                    
                    // CORRE√á√ÉO: Remover elemento espec√≠fico do DOM SEM renderizar tudo
                    const loteElement = document.querySelector(`[data-id="${id}"]`);
                    if (loteElement) {
                        loteElement.remove();
                        console.log('‚úÖ Elemento do lote removido da interface');
                    } else {
                        console.warn('‚ö†Ô∏è Elemento do lote n√£o encontrado no DOM:', `[data-id="${id}"]`);
                    }
                    
                    alert('Lote exclu√≠do com sucesso!');
                } else {
                    console.error('‚ùå Erro ao excluir lote do MySQL:', data.erro);
                    alert('Erro ao excluir lote: ' + (data.erro || 'Erro desconhecido'));
                }
            })
            .catch(error => {
                console.error('‚ùå Erro na requisi√ß√£o:', error);
                alert('Erro ao excluir lote. Tente novamente.');
            });
        } else {
            console.log('‚ùå Usu√°rio cancelou a exclus√£o');
        }
    };
    
    console.log('‚úÖ Fun√ß√£o excluirLoteData corrigida para usar MySQL');
})();
