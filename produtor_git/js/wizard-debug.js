// Debug helper para o wizard
console.log('üêõ Debug Helper carregado');

// Verificar estado das fun√ß√µes ap√≥s carregamento completo
window.addEventListener('load', function() {
    console.log('=== WIZARD DEBUG ===');
    console.log('nextStep tipo:', typeof window.nextStep);
    console.log('prevStep tipo:', typeof window.prevStep);
    console.log('validateStep tipo:', typeof window.validateStep);
    console.log('updateStepDisplay tipo:', typeof window.updateStepDisplay);
    console.log('wizardState:', window.wizardState);
    
    // Verificar bot√µes
    const btnsAvan√ßar = document.querySelectorAll('.btn-continue');
    console.log('Bot√µes Avan√ßar encontrados:', btnsAvan√ßar.length);
    
    btnsAvan√ßar.forEach((btn, index) => {
        console.log(`Bot√£o ${index + 1}:`, {
            onclick: btn.onclick,
            getAttribute: btn.getAttribute('onclick'),
            outerHTML: btn.outerHTML.substring(0, 100)
        });
    });
    
    // Adicionar listener de debug em todos os bot√µes avan√ßar
    btnsAvan√ßar.forEach((btn, index) => {
        btn.addEventListener('click', function(e) {
            console.log(`üîµ Clique no bot√£o Avan√ßar ${index + 1}`);
            console.log('Event:', e);
            console.log('CurrentStep antes:', window.wizardState?.currentStep);
        });
    });
});

// Fun√ß√£o de teste manual
window.testarNextStep = function() {
    console.log('üß™ Testando nextStep manualmente...');
    console.log('CurrentStep antes:', window.wizardState?.currentStep);
    
    if (typeof window.nextStep === 'function') {
        window.nextStep();
        console.log('CurrentStep depois:', window.wizardState?.currentStep);
    } else {
        console.error('‚ùå nextStep n√£o √© uma fun√ß√£o!');
    }
};

console.log('Para testar manualmente, execute: testarNextStep()');
