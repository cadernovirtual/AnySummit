/**
 * Debug e garantia de nextStep dispon√≠vel
 */

(function() {
    'use strict';
    
    console.log('üîß Debug nextStep iniciando...');
    
    // Verificar periodicamente se nextStep est√° dispon√≠vel
    let checkCount = 0;
    const checkInterval = setInterval(() => {
        checkCount++;
        
        if (window.nextStep) {
            console.log('‚úÖ nextStep encontrado ap√≥s', checkCount, 'tentativas');
            console.log('Tipo:', typeof window.nextStep);
            console.log('Fun√ß√£o:', window.nextStep);
            clearInterval(checkInterval);
        } else if (checkCount > 20) {
            console.error('‚ùå nextStep n√£o encontrado ap√≥s 20 tentativas');
            console.log('Criando nextStep de emerg√™ncia...');
            
            // Criar fun√ß√£o de emerg√™ncia
            window.nextStep = function() {
                console.warn('‚ö†Ô∏è nextStep de emerg√™ncia executado');
                
                // Tentar encontrar elementos necess√°rios
                const currentStepEl = document.querySelector('[data-step].active');
                if (currentStepEl) {
                    const currentStep = parseInt(currentStepEl.dataset.step);
                    const nextStepEl = document.querySelector(`[data-step="${currentStep + 1}"]`);
                    
                    if (nextStepEl) {
                        // Remover active do atual
                        currentStepEl.classList.remove('active');
                        document.querySelector(`[data-step-content="${currentStep}"]`)?.classList.remove('active');
                        
                        // Adicionar active ao pr√≥ximo
                        nextStepEl.classList.add('active');
                        document.querySelector(`[data-step-content="${currentStep + 1}"]`)?.classList.add('active');
                        
                        console.log('‚úÖ Avan√ßou para step', currentStep + 1);
                    }
                }
            };
            
            clearInterval(checkInterval);
        }
    }, 100);
    
    // Adicionar ao evento de clique dos bot√µes como backup
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(() => {
            // Encontrar todos os bot√µes de pr√≥ximo
            const nextButtons = document.querySelectorAll('button[onclick*="nextStep"]');
            console.log('üîç Bot√µes de pr√≥ximo encontrados:', nextButtons.length);
            
            nextButtons.forEach((button, index) => {
                console.log(`Bot√£o ${index + 1}:`, button.textContent.trim());
                
                // Adicionar listener de backup
                button.addEventListener('click', function(e) {
                    if (!window.nextStep) {
                        console.error('‚ùå nextStep ainda n√£o definido no clique!');
                        e.preventDefault();
                        e.stopPropagation();
                        
                        // Tentar chamar fun√ß√£o de emerg√™ncia
                        if (window.nextStep) {
                            window.nextStep();
                        }
                    }
                });
            });
        }, 1000);
    });
    
    console.log('‚úÖ Debug nextStep configurado');
    
})();
